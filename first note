note 24 06 24 

Практика

Организационные моменты 



Михаил Генадьевич

Понедельник Среда Пятница 17:00 миты
Только Дистант

6 июля отчет по практике и еще дневник практики  скан  Электронный университет

В сентябре принести 2-15 оригинал отчета практики 


Прикладывать ссылку git 

Брать чужое нельзя

Создать git-репозиторий практика

Бриф


Глава анализ сущ решений 
Формулирование требований к системе
Создать базу данных
Написать инструкцию пользователя
Провести тестирования системы свагер 
 2 задачи 

Формирование запроса на Парсинг
Вакансии - резюме по вакансии 
Запрос сущности (название должности знания стаж) система получает записи и записывает в БД


2 страницы или тг бот список вакансии по запросу и список резюме по запросу 

Требований к фронту нет можно брать шаблоны для вывода данных 

Язык любой (python )


Фронт и бек отдельно в докер контейнер 
 Все поднимается докеркомпоуз


Делать коммиты постоянно

# Praktica_1Semest_MTUCI

Задание на учебную практику
Цель работы: разработка платформы парсинга данных о соискателях и
вакансиях с платформы hh.ru
Задачи:
1) изучить существующие платформы для парсинга (beautiful soap, selenium или API платформ);
2) сформулировать функциональные требования к системе; 3) спроектировать базу данных;
4) написать инструкцию пользователя;
5) провести тестирование системы.

Aункционал
1) Возможность формирования запроса для парсинга данных по таким
полям, как фио, название должности, навыки, формат работы и т.д.
2) Загрузка в базу данных информации по результатам парсинга и
вывод аналитики по параметрам (например, сколько есть вакансий и
сколько кандидатов на вакансию).
Требования к frontend:
Может быть реализован в качестве веб-интерфейса на любом стеке
технологий (например, фреймворк Django). Также в качестве интерфейса взаимодействия с клиентом может быть реализован телеграм-бот.
Требования к backend:
Язык программирования: Python.
База данных: MySQL, PostgreSQL, MongoDB.
Каждый сервис должен быть упакован в отдельный Docker-контейнер.

!!Вся система должна подниматься посредством docker-compose!!
